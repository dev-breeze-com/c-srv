FILE (GLOB_RECURSE project_SRCS *.cpp *.cxx *.cc *.C *.c *.h *.hpp)
#SET (project_LIBS ${Boost_LIBRARIES} ${Log4Cxx_LIBRARIES})
SET (project_BIN ${PROJECT_NAME})

IF (NOT DEFINED project_build_shared)
   IF (CMAKE_CROSSCOMPILING)
       SET(project_build_shared 0)
   ELSE (CMAKE_CROSSCOMPILING)
       SET(project_build_shared 1)
   ENDIF (CMAKE_CROSSCOMPILING)
ENDIF (NOT DEFINED project_build_shared)

IF (NOT DEFINED project_build_static)
   SET(project_build_static 1)
ENDIF (NOT DEFINED project_build_static)

IF (QT4 STREQUAL "ON" OR QT4 STREQUAL "YES")
	SET(project_LIBS ${QT_LIBRARIES})
#	SET(project_MOC_HEADERS "qfilesystemhandler.h qfilesystemhandler_p.h qhttphandler.h qhttphandler_p.h qhttpserver.h qhttpserver_p.h qhttpsocket.h qhttpsocket_p.h qiodevicecopier.h qiodevicecopier_p.h qlocalfile.h qlocalfile_p.h qlucenehandler.h qobjecthandler.h qobjecthandler.h qobjecthandler_p.h qtemporarydir.h")
#	QT4_AUTOMOC(${project_MOC_HEADERS})
	QT4_WRAP_CPP(project_MOC_SRCS_GENERATED ${project_MOC_HEADERS})
	SET(project_LIBS ${project_LIBS} ${project_MOC_SRCS_GENERATED})
	MESSAGE(STATUS "MOC Files: ${project_MOC_SRCS_GENERATED}")
#	TARGET_LINK_LIBRARIES(${project_BIN} ${project_LIBS})
#	SET_TARGET_PROPERTIES(${project_BIN} PROPERTIES VERSION "${APPLICATION_VERSION_MAJOR}.${APPLICATION_VERSION_MINOR}" OUTPUT_NAME ${project_BIN} CLEAN_DIRECT_OUTPUT 1)
ENDIF ()

IF (project_build_static)
	ADD_LIBRARY(staticlib STATIC ${project_SRCS})
	TARGET_LINK_LIBRARIES(staticlib ${project_LIBS})
	SET_TARGET_PROPERTIES(staticlib PROPERTIES VERSION "${APPLICATION_VERSION_MAJOR}.${APPLICATION_VERSION_MINOR}" OUTPUT_NAME ${project_BIN} CLEAN_DIRECT_OUTPUT 1)
	INSTALL(TARGETS staticlib DESTINATION lib${LIB_SUFFIX})
ENDIF(project_build_static)

IF (project_build_shared)
	ADD_LIBRARY(sharedlib SHARED ${project_SRCS})
	TARGET_LINK_LIBRARIES(sharedlib ${project_LIBS})
	SET_TARGET_PROPERTIES(sharedlib PROPERTIES VERSION "${APPLICATION_VERSION_MAJOR}.${APPLICATION_VERSION_MINOR}" OUTPUT_NAME ${project_BIN} CLEAN_DIRECT_OUTPUT 1)
	INSTALL(TARGETS sharedlib DESTINATION lib${LIB_SUFFIX})
ENDIF(project_build_shared)
